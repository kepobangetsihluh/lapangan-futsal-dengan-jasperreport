/*
 * CREATED BY MUHAMMAD FIKRI ARZYAH
 */
package input.data.penjualan.toko.kelontong;
import database.connection;

import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import com.mysql.jdbc.PreparedStatement;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.util.JRLoader;
//import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;



/**
 *
 * @author Ardy Sendleep
 */
public class Frame_booking_lapangan extends javax.swing.JFrame {
    double nama,harga,jmlhjual,total;
    Model_booking penjualan = new Model_booking();

    /**
     * Creates new form Frame_booking_lapangan
     */
    public Frame_booking_lapangan() {
        initComponents();
        tblBarang.setModel(penjualan.getTabel());
        
        kode.addItem("LPNG01");
        kode.addItem("LPNG02");
        kode.addItem("LPNG03");
        kode.addItem("LPNG04");
        kode.addItem("LPNG05");
        
        
        Jam1.addItem("08.00");
        Jam1.addItem("09.00");
        Jam1.addItem("10.00");
        Jam1.addItem("11.00");
        Jam1.addItem("12.00");
        Jam1.addItem("13.00");
        Jam1.addItem("14.00");
        Jam1.addItem("15.00");
        Jam1.addItem("16.00");
        Jam1.addItem("17.00");
        Jam1.addItem("18.00");
        Jam1.addItem("19.00");
        Jam1.addItem("20.00");
        Jam1.addItem("21.00");
        Jam1.addItem("22.00");
        Jam1.addItem("23.00");
        Jam1.addItem("24.00");
        
        Jam2.addItem("08.00");
        Jam2.addItem("09.00");
        Jam2.addItem("10.00");
        Jam2.addItem("11.00");
        Jam2.addItem("12.00");
        Jam2.addItem("13.00");
        Jam2.addItem("14.00");
        Jam2.addItem("15.00");
        Jam2.addItem("16.00");
        Jam2.addItem("17.00");
        Jam2.addItem("18.00");
        Jam2.addItem("19.00");
        Jam2.addItem("20.00");
        Jam2.addItem("21.00");
        Jam2.addItem("22.00");
        Jam2.addItem("23.00");
        Jam2.addItem("24.00");
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();
        btnPesan = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        btnHapus = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtTeam = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Jam1 = new javax.swing.JComboBox();
        Jam2 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        kode = new javax.swing.JComboBox();
        date = new com.toedter.calendar.JDateChooser();
        btnEdit = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtbooking_id = new javax.swing.JLabel();
        btnshowlaporan = new javax.swing.JButton();
        refresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("LAPANGAN");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("OLALA FUTSAL");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("TANGGAL");

        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblBarang);

        btnPesan.setBackground(new java.awt.Color(51, 255, 51));
        btnPesan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPesan.setForeground(new java.awt.Color(51, 0, 0));
        btnPesan.setText("BOOKING");
        btnPesan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesanActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("NAMA");

        txtNama.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNamaKeyPressed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 51, 51));
        btnHapus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("NO TELEPON");

        txtTeam.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTeam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTeamKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("TEAM");

        txtNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoActionPerformed(evt);
            }
        });
        txtNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("WAKTU");

        Jam1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mulai" }));

        Jam2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selesai" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("-");

        btnEdit.setBackground(new java.awt.Color(255, 255, 0));
        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("CARI KODE");

        search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchCaretUpdate(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("BOOKING ID");

        btnshowlaporan.setBackground(new java.awt.Color(0, 204, 255));
        btnshowlaporan.setText("LIHAT LAPORAN");
        btnshowlaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowlaporanActionPerformed(evt);
            }
        });

        refresh.setBackground(new java.awt.Color(255, 255, 255));
        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnshowlaporan))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addGap(174, 174, 174)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtbooking_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPesan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(14, 14, 14)
                                .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnHapus, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Jam1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(Jam2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtNama)
                            .addComponent(txtNo)
                            .addComponent(txtTeam)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnshowlaporan)
                    .addComponent(refresh))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtbooking_id))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Jam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Jam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHapus)
                    .addComponent(btnPesan)
                    .addComponent(btnEdit)
                    .addComponent(jLabel9)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesanActionPerformed
        /*
        String[] data = new String[6];
        data[0] = (""+kode.getSelectedItem());
        //data[1]= (""+Tgl.getSelectedItem()+"-"+Bln.getSelectedItem()+"-"+Thn.getSelectedItem());
        data[1] = (""+date.getTime());
        data[2] = (""+Jam1.getSelectedItem()+"-"+Jam2.getSelectedItem());
        data[3] = txtNama.getText();
        data[4] = txtTeam.getText();
        data[5] = txtNo.getText();
        
        penjualan.getTabel().addRow(data);
        */
        java.util.Date date =(java.util.Date) this.date.getDate();
        String booking_id   = this.kode.getSelectedItem()+"-"+this.txtTeam.getText();
        String lapangan_id  = this.kode.getSelectedItem()+"";
        String name         = this.txtNama.getText();
        String team         = this.txtTeam.getText();
        String phone        = this.txtNo.getText();
        String start        = (""+Jam1.getSelectedItem());
        String end          = (""+Jam2.getSelectedItem());
        //String waktu = (""+Jam1.getSelectedItem()+"-"+Jam2.getSelectedItem());
        
        if(txtNama.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Nama Pemesan Tidak Boleh Kosong !");
            return;
        } else if (txtTeam.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Nama Team Tidak Boleh Kosong !");
            return;
        } else if (txtNo.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No Tlp Penanggung Jawab Tidak Boleh Kosong !");
            return;
        }
        
        try {
            Connection c        =connection.getkoneksi();
            String sql          = "Insert into orders values (?,?,?,?,?,?,?,?)";
            PreparedStatement p =(PreparedStatement) c.prepareStatement(sql);
            p.setString(1, booking_id);
            p.setString(2, lapangan_id);  
            p.setDate(3, new java.sql.Date(date.getTime()));
            p.setString(4, start);
            p.setString(5, end);
            p.setString(6, name);
            p.setString(7, team); 
            p.setString(8, phone); 
            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(this, "BOOKING BERHASIL !! ID BOOKING : " + this.kode.getSelectedItem()+"-"+this.txtTeam.getText());
    
            txtNama.setText("");
            txtTeam.setText("");
            txtNo.setText("");
            search.setText("");
            Jam1.setSelectedIndex(0);
            Jam2.setSelectedIndex(0);
            kode.setSelectedIndex(0);
            //date.clearSelected();
            
        }catch(SQLException e){
            System.out.println(e);
        } finally { }
        
        try {
            Connection c    = connection.getkoneksi();
            Statement s     = c.createStatement();
            String sql      = "SELECT booking_id, lapangan_id, date, start, end, name, team, phone FROM orders order by date ASC";
            ResultSet r     = s.executeQuery(sql);
            tblBarang.setModel(DbUtils.resultSetToTableModel(r));
        } catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_btnPesanActionPerformed

    private void txtNamaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaKeyPressed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        //penjualan.getTabel().removeRow(tblBarang.getSelectedRow());
        int ex  = JOptionPane.showConfirmDialog(null, "Apakah anda ingin menghapus data ini ? ", "Anda yakin ?", JOptionPane.YES_NO_OPTION);
        if (ex == 0){
        String booking_id = this.txtbooking_id.getText();
        try{
            Connection c        = connection.getkoneksi();
            String sql          = "DELETE FROM `uas`.`orders` WHERE booking_id = ?";
            PreparedStatement p = (PreparedStatement) c.prepareStatement(sql);
            p.setString(1, booking_id);
            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(this, "Berhasil Hapus data");
        } catch (HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        } finally { }
            txtNama.setText("");
            txtTeam.setText("");
            txtNo.setText("");
            search.setText("");
            Jam1.setSelectedIndex(0);
            Jam2.setSelectedIndex(0);
            kode.setSelectedIndex(0);
            //date.clearSelected();
        try {
            Connection c        = connection.getkoneksi();
            Statement s         = c.createStatement();
            String sql          = "SELECT booking_id, lapangan_id, date, start, end, name, team, phone FROM orders order by date ASC";
            ResultSet r         = s.executeQuery(sql);
            tblBarang.setModel(DbUtils.resultSetToTableModel(r));
        } catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }    
        }
        
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtTeamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTeamKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeamKeyPressed

    private void txtNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoKeyPressed

    private void txtNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        java.util.Date date     =(java.util.Date) this.date.getDate();
        String lapangan_id      = this.kode.getSelectedItem()+"";
        String name             = this.txtNama.getText();
        String team             = this.txtTeam.getText();
        String phone            = this.txtNo.getText();
        String start            = (""+Jam1.getSelectedItem());
        String end              = (""+Jam2.getSelectedItem());
        String booking_id       = this.txtbooking_id.getText();
        
        if(txtbooking_id.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "SILAHKAN PILIH DATA TERLEBIH DAHULU!");
            return;
        }
        
        try{
                Connection c        = connection.getkoneksi();
                String sql          = "UPDATE `uas`.`orders` SET `lapangan_id` = ?, `date` = ?, `start` = ?, `end` = ?, `name` = ?, `team` = ?, `phone` = ? WHERE booking_id  = ?";
                PreparedStatement p = (PreparedStatement) c.prepareStatement(sql);
                
                p.setString(1, lapangan_id);
                p.setDate(2, new java.sql.Date(date.getTime()));
                p.setString(3, start);
                p.setString(4, end);
                p.setString(5, name);
                p.setString(6, team);
                p.setString(7, phone);
                p.setString(8, booking_id);
                p.executeUpdate();
                p.close();
                JOptionPane.showMessageDialog(this, "Berhasil update data");
        } catch (HeadlessException | SQLException e){
                JOptionPane.showMessageDialog(null, e);
        } finally { }
            txtNama.setText("");
            txtbooking_id.setText("");
            txtTeam.setText("");
            txtNo.setText("");
            search.setText("");
            Jam1.setSelectedIndex(0);
            Jam2.setSelectedIndex(0);
            kode.setSelectedIndex(0);
        
        try {
            Connection c        = connection.getkoneksi();
            Statement s         = c.createStatement();
            String sql          = "SELECT booking_id, lapangan_id, date, start, end, name, team, phone FROM orders order by date ASC";
            ResultSet r         = s.executeQuery(sql);
            tblBarang.setModel(DbUtils.resultSetToTableModel(r));
        } catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void searchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchCaretUpdate
        try{
                Connection c    = connection.getkoneksi();
                Statement s     = c.createStatement();
                String sql      = "SELECT * FROM orders WHERE booking_id = '" + this.search.getText() + "'";
                ResultSet r     = s.executeQuery(sql);
                while (r.next()) {
                    this.kode.setSelectedItem(r.getString("lapangan_id")); 
                    this.txtNama.setText(r.getString("name"));
                    this.date.setDate(r.getDate("date"));
                    this.txtNo.setText(r.getString("phone"));
                    this.Jam1.setSelectedItem(r.getString("start")); 
                    this.Jam2.setSelectedItem(r.getString("end")); 
                    this.txtTeam.setText(r.getString("team"));
                    this.txtbooking_id.setText(r.getString("booking_id"));
                }
                r.close();
                s.close();
            } catch (SQLException e){
                JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_searchCaretUpdate

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        try {
            Connection c    = connection.getkoneksi();
            Statement s     = c.createStatement();
            String sql      = "SELECT booking_id, lapangan_id, date, start, end, name, team, phone FROM orders order by date ASC";
            ResultSet r     = s.executeQuery(sql);
            tblBarang.setModel(DbUtils.resultSetToTableModel(r));
        } catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_refreshActionPerformed

    private void btnshowlaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowlaporanActionPerformed
        
        File reportFile = new File(".");
        String dirr = "";
        try {
            Connection c    = connection.getkoneksi();
            Statement s     = c.createStatement();
            String sql = "SELECT * FROM orders";
            dirr = reportFile.getCanonicalPath() + "/src/laporan/";
            JasperDesign design = JRXmlLoader.load(dirr + "master2.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(design);
            ResultSet rs = s.executeQuery(sql);
            JRResultSetDataSource rsDataSource = new JRResultSetDataSource(rs);
            JasperPrint jp = JasperFillManager.fillReport(jr, new HashMap(), rsDataSource);
            JasperViewer.viewReport(jp);
            
        } catch (IOException | JRException | SQLException ex) {
            Logger.getLogger(Frame_booking_lapangan.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        /*
        try {
            //java.util.Date tgl=(java.util.Date) this.date.getDate();
            //System.out.println(tgl);
            Connection c    = connection.getkoneksi();
            Statement s     = c.createStatement();
            String sql = "SELECT * FROM orders";
            ResultSet rs = s.executeQuery(sql);
            JRResultSetDataSource rsDataSource = new JRResultSetDataSource(rs);
            
            HashMap parameter = new HashMap();
            String reportName = connection.PathReport +"/master2.jasper";
            File reportFile = new File(reportName);
            
            JasperReport jReport = (JasperReport)JRLoader.loadObject(reportFile.getPath());
            JasperPrint jPrint = JasperFillManager.fillReport(jReport, parameter, rsDataSource);
            JasperViewer.viewReport(jPrint);
            JRViewer viewer = new JRViewer(jPrint);
            viewer.setOpaque(true);
            viewer.setVisible(true);
            jScrollPane1.add(viewer);
            jScrollPane1.setViewportView(viewer);
            
        } catch (Exception ex) {
            System.out.print(ex);
        }
        */
    }//GEN-LAST:event_btnshowlaporanActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame_booking_lapangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame_booking_lapangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame_booking_lapangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame_booking_lapangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Frame_booking_lapangan().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Jam1;
    private javax.swing.JComboBox Jam2;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnPesan;
    private javax.swing.JButton btnshowlaporan;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox kode;
    private javax.swing.JButton refresh;
    private javax.swing.JTextField search;
    private javax.swing.JTable tblBarang;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNo;
    private javax.swing.JTextField txtTeam;
    private javax.swing.JLabel txtbooking_id;
    // End of variables declaration//GEN-END:variables
}
